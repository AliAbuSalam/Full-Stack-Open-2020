{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/PersonsView.js","components/Notification.js","components/ErrorMessage.js","services/phonebookConnect.js","App.js","index.js"],"names":["Filter","props","onSubmit","event","preventDefault","onChange","value","PersonForm","submit","nameChange","nameValue","numberChange","numberValue","type","PersonsView","personsWithFilter","filter","personsList","person","name","toLowerCase","includes","map","key","id","number","onClick","deleteEntry","Notification","message","className","ErrorMessage","url","axios","get","then","response","data","phoneNumber","post","entryID","delete","changedEntry","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notificationBox","setNotificationBox","errorBox","setErrorBox","useEffect","dbConnect","console","log","handleDuplicate","nameToAdd","window","confirm","personToUpdate","find","updatedPerson","setTimeout","catch","error","status","clearForm","setError","target","some","concat","entry","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAYeA,EAVA,SAACC,GACZ,OACI,oCACI,0BAAMC,SAAY,SAACC,GAAD,OAAWA,EAAMC,mBAC/B,kDAAuB,2BAAOC,SAAYJ,EAAMI,SAAUC,MAASL,EAAMK,YCO1EC,EAXI,SAACN,GAChB,OACI,oCACI,0BAAMC,SAAYD,EAAMO,QACpB,sCAAW,2BAAOH,SAAYJ,EAAMQ,WAAYH,MAASL,EAAMS,aAC/D,wCAAa,2BAAOL,SAAYJ,EAAMU,aAAcL,MAASL,EAAMW,eACnE,4BAAQC,KAAO,UAAf,UCIDC,EAVK,SAACb,GAEjB,IAAMc,EAAqC,KAAjBd,EAAMe,OAAef,EAAMgB,YAAchB,EAAMgB,YAAYD,QAAO,SAAAE,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAASpB,EAAMe,OAAOI,kBAGtJ,OACI,6BAAML,EAAkBO,KAAI,SAACJ,GAAD,OAAY,yBAAKK,IAAOL,EAAOM,IAAnB,IAAyBN,EAAOC,KAAhC,IAAuCD,EAAOO,OAAO,4BAAQC,QAAW,kBAAMzB,EAAM0B,YAAYT,KAA3C,UAAmE,mCCIzJU,EAVM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAe,OAAZA,EACQ,KAGP,yBAAKC,UAAY,qBACZD,ICMEE,EAZM,SAAC,GAAe,IAAdF,EAAa,EAAbA,QACnB,OAAe,OAAZA,EACQ,KAIP,yBAAKC,UAAY,SACZD,I,gBCPPG,EAAM,eA0BG,EAxBA,WACd,OAAOC,IACLC,IAAIF,GACJG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAqBd,EAlBD,SAACC,GACd,OAAOL,IACLM,KAAKP,EAAKM,GACVH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAed,EAZK,SAACG,GACnB,OAAOP,IACJQ,OADI,UACMT,EADN,YACaQ,IACjBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAShB,EANK,SAACK,GACnB,OAAOT,IACJU,IADI,UACGX,EADH,YACUU,EAAalB,IAAMkB,GACjCP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCiHhBO,EAlIH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPC,EADO,KACEC,EADF,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGoBJ,mBAAS,IAH7B,mBAGPK,EAHO,KAGIC,EAHJ,OAIcN,mBAAS,IAJvB,mBAIP7B,EAJO,KAICoC,EAJD,OAKgCP,mBAAS,MALzC,mBAKPQ,EALO,KAKUC,EALV,OAMkBT,mBAAS,MAN3B,mBAMPU,EANO,KAMGC,EANH,KAQdC,qBAAU,WACNC,IAEKvB,MAAK,SAAAC,GACFuB,QAAQC,IAAI,uBAAwBxB,GACpCW,EAAWX,QAErB,IAEF,IAuDMyB,EAAkB,SAACC,GACrB,GAAGC,OAAOC,QAAP,UAAkBF,EAAU3C,KAA5B,2EAA0G,CACzG,IAAM8C,EAAiBnB,EAAQoB,MAAK,SAAAhD,GAAM,OAAIA,EAAOC,OAAS2C,EAAU3C,QAClEgD,EAAa,2BAAOF,GAAP,IAAuBxC,OAAQqC,EAAUrC,SAE5DiC,EACiBS,GACZhC,MAAK,SAAAC,GACFW,EAAWD,EAAQxB,KAAI,SAAAJ,GAAM,OAAIA,EAAOM,KAAOY,EAASZ,GAAKN,EAAQkB,MACrEkB,EAAmB,GAAD,OAAIa,EAAchD,KAAlB,gCAClBiD,YAAW,WACPd,EAAmB,QACpB,QAENe,OAAM,SAACC,GACyB,MAA1BA,EAAMlC,SAASmC,OAChBf,EAAYc,EAAMlC,SAASC,OAE3BU,EAAWD,EAAQ9B,QAAO,SAAAE,GAAM,OAAIA,EAAOM,KAAO2C,EAAc3C,OAChEgC,EAAY,kBAAD,OAAmBW,EAAchD,KAAjC,+CAEbiD,YAAW,WACPZ,EAAY,QACb,QAGfgB,KAKEC,EAAW,SAACH,GAChBX,QAAQC,IAAIU,EAAMlC,SAASC,MAC3BmB,EAAYc,EAAMlC,SAASC,MAC3B+B,YAAW,WACTZ,EAAY,QACX,MAGCgB,EAAY,WACdvB,EAAW,IACXE,EAAa,KAGjB,OACI,6BACA,yCACA,kBAAC,EAAD,CAActB,QAAWwB,IACzB,kBAAC,EAAD,CAAcxB,QAAW0B,IACzB,kBAAC,EAAD,CAAQlD,SAxEe,SAACF,GACxBwD,QAAQC,IAAIzD,EAAMuE,OAAOpE,OACzB8C,EAAUjD,EAAMuE,OAAOpE,QAsEiBA,MAASU,IACjD,yCACA,kBAAC,EAAD,CAAYP,WApFS,SAACN,GACtBwD,QAAQC,IAAIzD,EAAMuE,OAAOpE,OACzB2C,EAAW9C,EAAMuE,OAAOpE,QAkFoBI,UAAasC,EAASrC,aA/E3C,SAACR,GACxBwD,QAAQC,IAAIzD,EAAMuE,OAAOpE,OACzB6C,EAAahD,EAAMuE,OAAOpE,QA6E4EM,YAAesC,EAAW1C,OA1G/G,SAACL,GAClBA,EAAMC,iBACN,IAAM0D,EAAY,CAAC3C,KAAM6B,EAASvB,OAAQyB,GACvCJ,EAAQ6B,MAAK,SAAAzD,GAAM,OAAIA,EAAOC,OAAS2C,EAAU3C,QAChD0C,EAAgBC,IAIpBJ,EACWI,GACN3B,MAAK,SAAAC,GACFW,EAAWD,EAAQ8B,OAAOxC,IAC1BkB,EAAmB,UAAD,OAAWQ,EAAU3C,OACvCiD,YAAW,WACPd,EAAmB,QACpB,QACJe,OAAM,SAAAC,GACPG,EAASH,MAEfE,QAwFA,uCACA,kBAAC,EAAD,CAAavD,YAAe6B,EAAS9B,OAAUA,EAAQW,YAvEtC,SAACT,GACf6C,OAAOC,QAAP,iBAAyB9C,EAAOC,KAAhC,SACCuC,EAAsBxC,EAAOM,IAC1B6C,OAAM,SAAAC,GACwB,MAA1BA,EAAMlC,SAASmC,QAChBf,EAAY,GAAD,OAAItC,EAAOC,KAAX,kCACXiD,YAAW,WACTZ,EAAY,QACX,OAEHG,QAAQC,IAAIU,EAAMlC,SAASC,MAC3BoC,EAASH,OAGfvB,EAAWD,EAAQ9B,QAAO,SAAA6D,GAAK,OAAIA,EAAMrD,KAAON,EAAOM,a,MCvEnEsD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6695c639.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = (props) => {\n    return(\n        <>\n            <form onSubmit = {(event) => event.preventDefault()}>\n                <div>filter shown with <input onChange = {props.onChange} value = {props.value} /></div>\n            </form>\n        </>\n    );\n}\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = (props) => {\n    return(\n        <>\n            <form onSubmit = {props.submit}>\n                <div>name: <input onChange = {props.nameChange} value = {props.nameValue}/></div>\n                <div>number: <input onChange = {props.numberChange} value = {props.numberValue}/></div>\n                <button type = 'submit'>add</button>\n            </form>\n        </>\n    );\n}\nexport default PersonForm;","import React from 'react';\n\nconst PersonsView = (props) => {\n\n    const personsWithFilter = props.filter === \"\"? props.personsList : props.personsList.filter(person => person.name.toLowerCase().includes(props.filter.toLowerCase()));\n\n\n    return(\n        <div>{personsWithFilter.map((person) => <div key = {person.id}> {person.name} {person.number}<button onClick = {() => props.deleteEntry(person)}>delete</button><br/></div>)}</div>\n    );\n}\n\nexport default PersonsView;","import React from 'react';\n\nconst Notification = ({message}) => {\n    if(message === null){\n        return(null);\n    }\n    return(\n        <div className = 'successfulCommand'>\n            {message}            \n        </div>\n    );\n}\nexport default Notification;","import React from 'react';\n\nconst ErrorMessage = ({message}) => {\n    if(message === null){\n        return(null);\n    }\n\n    return(\n        <div className = 'error'>\n            {message}\n        </div>\n    );\n}\n\nexport default ErrorMessage;","import axios from 'axios';\n\nconst url = '/api/persons';\n\nconst getAll = () => {\n\treturn axios\n\t\t.get(url)\n\t\t.then(response => response.data);\n}\n\nconst input = (phoneNumber) => {\n\treturn axios\n\t\t.post(url, phoneNumber)\n\t\t.then(response => response.data);\n}\n\nconst deleteEntry = (entryID) => {\n  return axios\n    .delete(`${url}/${entryID}`)\n    .then(response => response.data);\n}\n\nconst updateEntry = (changedEntry) => {\n  return axios\n    .put(`${url}/${changedEntry.id}`, changedEntry)\n    .then(response => response.data);\n}\n\nexport default { getAll, input, deleteEntry, updateEntry };\n\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport PersonsView from './components/PersonsView';\nimport Notification from './components/Notification';\nimport ErrorMessage from './components/ErrorMessage';\nimport dbConnect from './services/phonebookConnect';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filter, setFilter] = useState('');\n    const [notificationBox, setNotificationBox] = useState(null);\n    const [errorBox, setErrorBox] = useState(null);\n\n    useEffect(() => {\n        dbConnect\n            .getAll()\n            .then(response => {\n                console.log('data fetch success, ', response);\n                setPersons(response);\n            });\n    },[])\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const nameToAdd = {name: newName, number: newNumber};\n        if(persons.some(person => person.name === nameToAdd.name)){\n            handleDuplicate(nameToAdd);\n            return;\n        }\n\n        dbConnect\n            .input(nameToAdd)\n            .then(response => {\n                setPersons(persons.concat(response));\n                setNotificationBox(` Added ${nameToAdd.name}`);\n                setTimeout(() => {\n                    setNotificationBox(null);\n                }, 3000);\n            }).catch(error => {\n              setError(error);\n            })\n        clearForm();\n  }\n\n    const handleNameChange = (event) => {\n        console.log(event.target.value);\n        setNewName(event.target.value);\n    }\n\n    const handleNumberChange = (event) => {\n        console.log(event.target.value);\n        setNewNumber(event.target.value);\n    }\n\n    const handleFilterChange = (event) => {\n        console.log(event.target.value);\n        setFilter(event.target.value);\n    }\n\n    const handleDelete = (person) => {\n        if(window.confirm(`Delete ${person.name} ?`)){\n            dbConnect.deleteEntry(person.id)\n              .catch(error => {\n                if(error.response.status === 404){\n                  setErrorBox(`${person.name} is not in the server anymore`)\n                  setTimeout(() => {\n                    setErrorBox(null);\n                  }, 3000);\n                } else {\n                  console.log(error.response.data);\n                  setError(error);\n                }                \n              })\n            setPersons(persons.filter(entry => entry.id !== person.id))\n        }\n    }\n  \n    const handleDuplicate = (nameToAdd) => {\n        if(window.confirm(`${nameToAdd.name} is already added to phonebook, replace the old number with a new one?`)){\n            const personToUpdate = persons.find(person => person.name === nameToAdd.name);\n            const updatedPerson = {...personToUpdate, number: nameToAdd.number};\n      \n            dbConnect\n                .updateEntry(updatedPerson)\n                .then(response => {\n                    setPersons(persons.map(person => person.id !== response.id ? person: response ));\n                    setNotificationBox(`${updatedPerson.name}'s number has been changed.`);\n                    setTimeout(() => {\n                        setNotificationBox(null);\n                    }, 3000);\n                })\n                .catch((error) => {\n                    if(error.response.status === 409){\n                      setErrorBox(error.response.data);\n                    } else {\n                      setPersons(persons.filter(person => person.id !== updatedPerson.id));\n                      setErrorBox(`Information of ${updatedPerson.name} has already been removed from the server`);\n                    }\n                    setTimeout(() => {\n                        setErrorBox(null);\n                    }, 3000);\n                });\n        }\n        clearForm();\n        return;\n    \n    }\n\n    const setError = (error) => {\n      console.log(error.response.data);\n      setErrorBox(error.response.data);\n      setTimeout(() => {\n        setErrorBox(null);\n      }, 3000);\n    }\n\n    const clearForm = () => {\n        setNewName('');\n        setNewNumber('');\n    }\n\n    return(\n        <div>\n        <h2>Phonebook</h2>\n        <Notification message = {notificationBox} />\n        <ErrorMessage message = {errorBox} />\n        <Filter onChange = {handleFilterChange} value = {filter} />\n        <h2>add a new</h2>\n        <PersonForm nameChange = {handleNameChange} nameValue = {newName} numberChange = {handleNumberChange} numberValue = {newNumber} submit = {handleSubmit}/>\n        <h2>Numbers</h2>\n        <PersonsView personsList = {persons} filter = {filter} deleteEntry = {handleDelete}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}